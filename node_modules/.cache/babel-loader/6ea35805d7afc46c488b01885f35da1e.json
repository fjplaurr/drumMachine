{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Francisco Javier\\\\Documents\\\\Proyectos\\\\drumMachine\\\\drumMachine\\\\src\\\\App.js\";\nimport React from 'react';\nimport Pad from './components/pad/Pad';\nimport VolumeSlider from './components/volumeSlider/VolumeSlider';\nimport PowerOnOff from './components/powerOnOff/PowerOnOff';\nimport Display from './components/display/Display';\nimport PlaylistSelector from './components/playlistSelector/PlaylistSelector';\nimport LogoHeader from './components/logoHeader/LogoHeader';\nimport './App.css';\nimport './components/volumeSlider/volumeSlider.css';\nimport './components/display/display.css';\nimport './components/pad/pad.css';\nimport './components/powerOnOff/powerOnOff.css';\nimport './components/playlistSelector/playlistSelector.css';\nimport './components/logoHeader/logoHeader.css';\nimport store from './redux/store';\nimport { playlistOne, playlistTwo } from './audios';\nimport { connect } from 'react-redux';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.volumeHandler = event => {\n      this.setState({\n        volume: event.target.value,\n        muted: false\n      });\n    };\n\n    this.makeSoundClick = (index, e) => {\n      if (!store.getState().onoff) return;\n      var aud = e.currentTarget.querySelector('audio');\n      aud.currentTime = 0;\n      aud.volume = this.state.volume / 100;\n      aud.play();\n      this.setState({\n        keyPressed: e.currentTarget.value\n      });\n    };\n\n    this.makeSoundKeyDown = e => {\n      if (!store.getState().onoff || this.keyValidator.indexOf(e.key.toUpperCase()) === -1) return;\n      var aud = document.querySelector(\".clip[id=\".concat(e.key.toUpperCase(), \"]\"));\n      aud.currentTime = 0;\n      aud.volume = this.state.volume / 100;\n      aud.play();\n      this.setState({\n        keyPressed: e.key.toUpperCase()\n      });\n    };\n\n    this.changePlayList = event => {\n      const playL = event.currentTarget.innerHTML;\n      this.setState(() => ({\n        playList: playL\n      }));\n    };\n\n    this.muteVolume = () => {\n      this.setState(state => state.muted === false ? {\n        volume: 0,\n        muted: true,\n        lastVolume: state.volume\n      } : {\n        volume: state.lastVolume,\n        muted: false\n      });\n    };\n\n    this.state = {\n      playList: 'CLASSIC',\n      onOff: true,\n      keyPressed: '',\n      volume: 50,\n      muted: false,\n      lastVolume: 0\n    };\n    this.aud = [];\n    this.keyValidator = ['Q', 'W', 'E', 'A', 'S', 'D', 'Z', 'X', 'C'];\n    this.firstPlayList = playlistOne;\n    this.secondPlayList = playlistTwo;\n  }\n\n  componentWillMount() {\n    document.addEventListener(\"keydown\", this.makeSoundKeyDown.bind(this));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"drumMachine\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"divHeaderControls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"divHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(PowerOnOff, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.state.onOff), React.createElement(LogoHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"Controls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"divPlaySelectors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(PlaylistSelector, {\n      playList: \"CLASSIC\",\n      changePlaylist: this.changePlayList,\n      playListActive: this.state.playList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(PlaylistSelector, {\n      playList: \"ELECTRO\",\n      changePlaylist: this.changePlayList,\n      playListActive: this.state.playList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), React.createElement(Display, {\n      playlist: this.state.playList,\n      keyPressed: this.state.keyPressed,\n      firstPlayList: this.firstPlayList,\n      secondPlayList: this.secondPlayList,\n      parVolume: this.state.volume,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(VolumeSlider, {\n      propMuted: this.state.muted,\n      vol: this.state.volume,\n      muteVolume: this.muteVolume,\n      parVolume: this.state.volume,\n      changeVol: this.volumeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"Grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.state.playList === 'CLASSIC' ? playlistOne.map((val, index) => React.createElement(Pad, {\n      code: val.code,\n      parLetter: val.key,\n      parVolume: this.state.volume,\n      parSound: val.url,\n      sendKey: this.makeSoundClick.bind(this, index),\n      key: index,\n      keyActive: this.state.keyPressed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })) : playlistTwo.map((val, index) => React.createElement(Pad, {\n      code: val.code,\n      parLetter: val.key,\n      parVolume: this.state.volume,\n      parSound: val.url,\n      sendKey: this.makeSoundClick.bind(this, index),\n      key: index,\n      keyActive: this.state.keyPressed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    onoff: state.onoff\n  };\n};\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Francisco Javier\\Documents\\Proyectos\\drumMachine\\drumMachine\\src\\App.js"],"names":["React","Pad","VolumeSlider","PowerOnOff","Display","PlaylistSelector","LogoHeader","store","playlistOne","playlistTwo","connect","App","Component","constructor","props","volumeHandler","event","setState","volume","target","value","muted","makeSoundClick","index","e","getState","onoff","aud","currentTarget","querySelector","currentTime","state","play","keyPressed","makeSoundKeyDown","keyValidator","indexOf","key","toUpperCase","document","changePlayList","playL","innerHTML","playList","muteVolume","lastVolume","onOff","firstPlayList","secondPlayList","componentWillMount","addEventListener","bind","render","map","val","code","url","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Pad from './components/pad/Pad';\r\nimport VolumeSlider from './components/volumeSlider/VolumeSlider';\r\nimport PowerOnOff from './components/powerOnOff/PowerOnOff';\r\nimport Display from './components/display/Display';\r\nimport PlaylistSelector from './components/playlistSelector/PlaylistSelector';\r\nimport LogoHeader from './components/logoHeader/LogoHeader';\r\nimport './App.css';\r\nimport './components/volumeSlider/volumeSlider.css';\r\nimport './components/display/display.css';\r\nimport './components/pad/pad.css';\r\nimport './components/powerOnOff/powerOnOff.css';\r\nimport './components/playlistSelector/playlistSelector.css';\r\nimport './components/logoHeader/logoHeader.css';\r\nimport store from './redux/store'\r\nimport { playlistOne, playlistTwo } from './audios';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      playList: 'CLASSIC',\r\n      onOff: true,\r\n      keyPressed: '',\r\n      volume: 50,\r\n      muted: false,\r\n      lastVolume: 0\r\n    };\r\n    this.aud = [];\r\n    this.keyValidator = ['Q', 'W', 'E', 'A', 'S', 'D', 'Z', 'X', 'C'];\r\n    this.firstPlayList = playlistOne;\r\n    this.secondPlayList = playlistTwo;\r\n  }\r\n\r\n  componentWillMount() {\r\n    document.addEventListener(\"keydown\", this.makeSoundKeyDown.bind(this));\r\n  }\r\n\r\n  volumeHandler = (event) => {\r\n    this.setState({ volume: event.target.value, muted: false });\r\n  }\r\n\r\n  makeSoundClick = (index, e) => {\r\n    if (!store.getState().onoff) return;\r\n    var aud = e.currentTarget.querySelector('audio');\r\n    aud.currentTime = 0;\r\n    aud.volume = this.state.volume / 100;\r\n    aud.play();\r\n    this.setState({ keyPressed: e.currentTarget.value });\r\n  }\r\n\r\n  makeSoundKeyDown = (e) => {\r\n    if (!store.getState().onoff || this.keyValidator.indexOf(e.key.toUpperCase()) === -1) return;\r\n    var aud = document.querySelector(`.clip[id=${e.key.toUpperCase()}]`);\r\n    aud.currentTime = 0;\r\n    aud.volume = this.state.volume / 100;\r\n    aud.play();\r\n    this.setState({ keyPressed: e.key.toUpperCase() });\r\n  }\r\n\r\n\r\n  changePlayList = (event) => {\r\n    const playL = event.currentTarget.innerHTML;\r\n    this.setState(() => ({\r\n      playList: playL\r\n    }));\r\n  }\r\n\r\n  muteVolume = () => {\r\n    this.setState((state) =>\r\n      state.muted === false ? { volume: 0, muted: true, lastVolume: state.volume } : { volume: state.lastVolume, muted: false }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"drumMachine\">\r\n          <div className='divHeaderControls'>\r\n            <div className='divHeader'>\r\n              <PowerOnOff>{this.state.onOff}</PowerOnOff>\r\n              <LogoHeader></LogoHeader>\r\n            </div>\r\n            <div className=\"Controls\">\r\n              <div className='divPlaySelectors'>\r\n                <PlaylistSelector playList='CLASSIC' changePlaylist={this.changePlayList} playListActive={this.state.playList}></PlaylistSelector>\r\n                <PlaylistSelector playList='ELECTRO' changePlaylist={this.changePlayList} playListActive={this.state.playList}></PlaylistSelector>\r\n              </div>\r\n              <Display playlist={this.state.playList} keyPressed={this.state.keyPressed} firstPlayList={this.firstPlayList} secondPlayList={this.secondPlayList} parVolume={this.state.volume}></Display>\r\n              <VolumeSlider propMuted={this.state.muted} vol={this.state.volume} muteVolume={this.muteVolume} parVolume={this.state.volume} changeVol={this.volumeHandler}></VolumeSlider>\r\n            </div>\r\n          </div>\r\n          <div className=\"Grid\">\r\n            {\r\n              this.state.playList === 'CLASSIC' ?\r\n                playlistOne.map((val, index) =>\r\n                  <Pad code={val.code} parLetter={val.key} parVolume={this.state.volume} parSound={val.url} sendKey={this.makeSoundClick.bind(this, index)} key={index} keyActive={this.state.keyPressed}></Pad>\r\n                ) :\r\n                playlistTwo.map((val, index) =>\r\n                  <Pad code={val.code} parLetter={val.key} parVolume={this.state.volume} parSound={val.url} sendKey={this.makeSoundClick.bind(this, index)} key={index} keyActive={this.state.keyPressed}></Pad>\r\n                )\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) =>{\r\n  return {onoff: state.onoff}\r\n}\r\n\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}