{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Francisco Javier\\\\Documents\\\\Proyectos\\\\drumMachine\\\\drumMachine\\\\src\\\\App.js\";\nimport React from 'react';\nimport Pad from './components/pad/Pad';\nimport VolumeSlider from './components/volumeSlider/VolumeSlider';\nimport PowerOnOff from './components/powerOnOff/PowerOnOff';\nimport Display from './components/display/Display';\nimport PlaylistSelector from './components/playlistSelector/PlaylistSelector';\nimport LogoHeader from './components/logoHeader/LogoHeader';\nimport './App.css';\nimport './components/volumeSlider/volumeSlider.css';\nimport './components/display/display.css';\nimport './components/pad/pad.css';\nimport './components/powerOnOff/powerOnOff.css';\nimport './components/playlistSelector/playlistSelector.css';\nimport './components/logoHeader/logoHeader.css';\nimport { connect } from 'react-redux';\nimport { playlistOne, playlistTwo } from '../../audios';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.makeSoundClick = (index, e) => {\n      if (!this.props.onoff) return;\n      var aud = e.currentTarget.querySelector('audio');\n      aud.currentTime = 0;\n      aud.volume = this.props.volumeStore / 100;\n      aud.play();\n      this.setState({\n        keyPressed: e.currentTarget.value\n      });\n    };\n\n    this.makeSoundKeyDown = e => {\n      if (!this.props.onoff || this.keyValidator.indexOf(e.key.toUpperCase()) === -1) return;\n      var aud = document.querySelector(\".clip[id=\".concat(e.key.toUpperCase(), \"]\"));\n      aud.currentTime = 0;\n      aud.volume = this.props.volumeStore / 100;\n      aud.play();\n      this.setState({\n        keyPressed: e.key.toUpperCase()\n      });\n    };\n\n    this.state = {\n      playList: 'CLASSIC',\n      keyPressed: '',\n      lastVolume: 0\n    };\n    this.aud = [];\n    this.keyValidator = ['Q', 'W', 'E', 'A', 'S', 'D', 'Z', 'X', 'C'];\n  }\n\n  componentWillMount() {\n    document.addEventListener(\"keydown\", this.makeSoundKeyDown.bind(this));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"drumMachine\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"divHeaderControls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"divHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(PowerOnOff, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(LogoHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"Controls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"divPlaySelectors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(PlaylistSelector, {\n      playList: \"CLASSIC\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(PlaylistSelector, {\n      playList: \"ELECTRO\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(Display, {\n      playlist: this.state.playList,\n      keyPressed: this.state.keyPressed,\n      parVolume: this.state.volume,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(VolumeSlider, {\n      vol: this.state.volume,\n      parVolume: this.state.volume,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"Grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, this.props.playListProp === 'CLASSIC' ? playlistOne.map((val, index) => React.createElement(Pad, {\n      code: val.code,\n      parLetter: val.key,\n      parVolume: this.state.volume,\n      parSound: val.url,\n      sendKey: this.makeSoundClick.bind(this, index),\n      key: index,\n      keyActive: this.state.keyPressed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })) : playlistTwo.map((val, index) => React.createElement(Pad, {\n      code: val.code,\n      parLetter: val.key,\n      parVolume: this.state.volume,\n      parSound: val.url,\n      sendKey: this.makeSoundClick.bind(this, index),\n      key: index,\n      keyActive: this.state.keyPressed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    onoff: state.onoff,\n    volumeStore: state.volume,\n    playListProp: state.playList\n  };\n};\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["C:\\Users\\Francisco Javier\\Documents\\Proyectos\\drumMachine\\drumMachine\\src\\App.js"],"names":["React","Pad","VolumeSlider","PowerOnOff","Display","PlaylistSelector","LogoHeader","connect","playlistOne","playlistTwo","App","Component","constructor","props","makeSoundClick","index","e","onoff","aud","currentTarget","querySelector","currentTime","volume","volumeStore","play","setState","keyPressed","value","makeSoundKeyDown","keyValidator","indexOf","key","toUpperCase","document","state","playList","lastVolume","componentWillMount","addEventListener","bind","render","playListProp","map","val","code","url","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Pad from './components/pad/Pad';\r\nimport VolumeSlider from './components/volumeSlider/VolumeSlider';\r\nimport PowerOnOff from './components/powerOnOff/PowerOnOff';\r\nimport Display from './components/display/Display';\r\nimport PlaylistSelector from './components/playlistSelector/PlaylistSelector';\r\nimport LogoHeader from './components/logoHeader/LogoHeader';\r\nimport './App.css';\r\nimport './components/volumeSlider/volumeSlider.css';\r\nimport './components/display/display.css';\r\nimport './components/pad/pad.css';\r\nimport './components/powerOnOff/powerOnOff.css';\r\nimport './components/playlistSelector/playlistSelector.css';\r\nimport './components/logoHeader/logoHeader.css';\r\nimport { connect } from 'react-redux';\r\nimport { playlistOne, playlistTwo } from '../../audios';\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      playList: 'CLASSIC',\r\n      keyPressed: '',\r\n      lastVolume: 0\r\n    };\r\n    this.aud = [];\r\n    this.keyValidator = ['Q', 'W', 'E', 'A', 'S', 'D', 'Z', 'X', 'C'];\r\n  }\r\n\r\n  componentWillMount() {\r\n    document.addEventListener(\"keydown\", this.makeSoundKeyDown.bind(this));\r\n  }\r\n\r\n  makeSoundClick = (index, e) => {\r\n    if (!this.props.onoff) return;\r\n    var aud = e.currentTarget.querySelector('audio');\r\n    aud.currentTime = 0;\r\n    aud.volume = this.props.volumeStore / 100;\r\n    aud.play();\r\n    this.setState({ keyPressed: e.currentTarget.value });\r\n  }\r\n\r\n  makeSoundKeyDown = (e) => {\r\n    if (!this.props.onoff || this.keyValidator.indexOf(e.key.toUpperCase()) === -1) return;\r\n    var aud = document.querySelector(`.clip[id=${e.key.toUpperCase()}]`);\r\n    aud.currentTime = 0;\r\n    aud.volume = this.props.volumeStore / 100;\r\n    aud.play();\r\n    this.setState({ keyPressed: e.key.toUpperCase() });\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"drumMachine\">\r\n          <div className='divHeaderControls'>\r\n            <div className='divHeader'>\r\n              <PowerOnOff></PowerOnOff>\r\n              <LogoHeader></LogoHeader>\r\n            </div>\r\n            <div className=\"Controls\">\r\n              <div className='divPlaySelectors'>\r\n                <PlaylistSelector playList='CLASSIC' ></PlaylistSelector>\r\n                <PlaylistSelector playList='ELECTRO'></PlaylistSelector>\r\n              </div>\r\n              <Display playlist={this.state.playList} keyPressed={this.state.keyPressed} parVolume={this.state.volume}></Display>\r\n              <VolumeSlider vol={this.state.volume} parVolume={this.state.volume}></VolumeSlider>\r\n            </div>\r\n          </div>\r\n          <div className=\"Grid\">\r\n            {\r\n              this.props.playListProp === 'CLASSIC' ?\r\n                playlistOne.map((val, index) =>\r\n                  <Pad code={val.code} parLetter={val.key} parVolume={this.state.volume} parSound={val.url} sendKey={this.makeSoundClick.bind(this, index)} key={index} keyActive={this.state.keyPressed}></Pad>\r\n                ) :\r\n                playlistTwo.map((val, index) =>\r\n                  <Pad code={val.code} parLetter={val.key} parVolume={this.state.volume} parSound={val.url} sendKey={this.makeSoundClick.bind(this, index)} key={index} keyActive={this.state.keyPressed}></Pad>\r\n                )\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    onoff: state.onoff,\r\n    volumeStore: state.volume,\r\n    playListProp: state.playList\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(App);"]},"metadata":{},"sourceType":"module"}