{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Francisco Javier\\\\Documents\\\\Proyectos\\\\drumMachine\\\\drumMachine\\\\src\\\\ChildComponents.js\";\nimport React from 'react';\nexport const VolumeSlider = props => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"range\",\n    min: \"0\",\n    max: \"100\",\n    onClick: props.changeVol,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }), props.parVolume);\n};\nexport class Pad extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.makeSound = e => {\n      if (this.props.paramOnOff === 'OFF' || e.type === 'keydown' && e.key.toUpperCase() !== this.props.paramLetter) return;\n      this.props.sendKey(this.props.paramLetter);\n      this.audio.current.currentTime = 0;\n      this.audio.current.volume = this.props.parVolume / 100;\n      this.audio.current.play();\n    };\n\n    this.audio = React.createRef();\n  }\n\n  componentWillMount() {\n    document.addEventListener(\"keydown\", this.makeSound.bind(this));\n  }\n\n  render() {\n    console.log(\"Rendering child\");\n    return React.createElement(\"div\", {\n      onClick: this.makeSound,\n      className: \"drum-pad\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"audio\", {\n      src: this.props.paramSound,\n      className: \"aud\",\n      ref: this.audio,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, this.props.paramLetter));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Francisco Javier\\Documents\\Proyectos\\drumMachine\\drumMachine\\src\\ChildComponents.js"],"names":["React","VolumeSlider","props","changeVol","parVolume","Pad","Component","constructor","makeSound","e","paramOnOff","type","key","toUpperCase","paramLetter","sendKey","audio","current","currentTime","volume","play","createRef","componentWillMount","document","addEventListener","bind","render","console","log","paramSound"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAIA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW;AACnC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,GAAG,EAAC,GAAxB;AAA6B,IAAA,GAAG,EAAC,KAAjC;AAAuC,IAAA,OAAO,EAAEA,KAAK,CAACC,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGD,KAAK,CAACE,SAFT,CADF;AAMH,CAPM;AAUP,OAAO,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAiC;AACtCC,EAAAA,WAAW,CAACL,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAKlBM,SALkB,GAKLC,CAAD,IAAM;AAChB,UAAG,KAAKP,KAAL,CAAWQ,UAAX,KAA0B,KAA1B,IAAoCD,CAAC,CAACE,IAAF,KAAW,SAAX,IAAwBF,CAAC,CAACG,GAAF,CAAMC,WAAN,OAAwB,KAAKX,KAAL,CAAWY,WAAlG,EAAgH;AAChH,WAAKZ,KAAL,CAAWa,OAAX,CAAmB,KAAKb,KAAL,CAAWY,WAA9B;AACA,WAAKE,KAAL,CAAWC,OAAX,CAAmBC,WAAnB,GAAiC,CAAjC;AACA,WAAKF,KAAL,CAAWC,OAAX,CAAmBE,MAAnB,GAA4B,KAAKjB,KAAL,CAAWE,SAAX,GAAqB,GAAjD;AACA,WAAKY,KAAL,CAAWC,OAAX,CAAmBG,IAAnB;AACD,KAXiB;;AAEhB,SAAKJ,KAAL,GAAahB,KAAK,CAACqB,SAAN,EAAb;AACD;;AAUDC,EAAAA,kBAAkB,GAAE;AAClBC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAoC,KAAKhB,SAAL,CAAeiB,IAAf,CAAoB,IAApB,CAApC;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,WACE;AAAK,MAAA,OAAO,EAAE,KAAKpB,SAAnB;AAA+B,MAAA,SAAS,EAAC,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,GAAG,EAAE,KAAKN,KAAL,CAAW2B,UAAvB;AAAmC,MAAA,SAAS,EAAC,KAA7C;AAAmD,MAAA,GAAG,EAAE,KAAKb,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAS,KAAKd,KAAL,CAAWY,WAApB,CAFF,CADF;AAOD;;AA3BqC","sourcesContent":["import React from 'react';\r\n\r\n\r\n\r\nexport const VolumeSlider = (props) => {\r\n    return(\r\n      <div>\r\n        <input type='range' min='0'  max='100' onClick={props.changeVol}></input>\r\n        {props.parVolume}\r\n      </div>    \r\n    )\r\n}\r\n\r\n\r\nexport class Pad extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.audio = React.createRef();\r\n  }\r\n\r\n  makeSound = (e) =>{\r\n    if(this.props.paramOnOff === 'OFF' || (e.type === 'keydown' && e.key.toUpperCase() !== this.props.paramLetter)) return;\r\n    this.props.sendKey(this.props.paramLetter);\r\n    this.audio.current.currentTime = 0;\r\n    this.audio.current.volume = this.props.parVolume/100;\r\n    this.audio.current.play();\r\n  }\r\n\r\n  componentWillMount(){\r\n    document.addEventListener(\"keydown\",this.makeSound.bind(this));\r\n  }\r\n\r\n  render() {\r\n    console.log(\"Rendering child\");\r\n    return(\r\n      <div onClick={this.makeSound}  className='drum-pad'>\r\n        <audio src={this.props.paramSound} className=\"aud\" ref={this.audio}></audio> \r\n        <button>{this.props.paramLetter}</button>\r\n        {/*<AwesomeButton type=\"primary\" >{this.props.paramLetter}</AwesomeButton>*/}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}