{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Francisco Javier\\\\Documents\\\\Proyectos\\\\drumMachine\\\\drumMachine\\\\src\\\\App.js\";\nimport React from 'react';\nimport Pad from './components/pad/Pad';\nimport VolumeSlider from './components/volumeSlider/VolumeSlider';\nimport PowerOnOff from './components/powerOnOff/PowerOnOff';\nimport Display from './components/display/Display';\nimport PlaylistSelector from './components/playlistSelector/PlaylistSelector';\nimport LogoHeader from './components/logoHeader/LogoHeader';\nimport './App.css';\nimport './components/volumeSlider/volumeSlider.css';\nimport './components/display/display.css';\nimport './components/pad/pad.css';\nimport './components/powerOnOff/powerOnOff.css';\nimport './components/playlistSelector/playlistSelector.css';\nimport './components/logoHeader/logoHeader.css';\nimport { playlistOne, playlistTwo } from './audios';\nimport { connect } from 'react-redux';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.makeSoundClick = (index, e) => {\n      if (!this.props.onoff) return;\n      var aud = e.currentTarget.querySelector('audio');\n      aud.currentTime = 0;\n      aud.volume = this.props.volume / 100;\n      aud.play();\n      this.setState({\n        keyPressed: e.currentTarget.value\n      });\n    };\n\n    this.makeSoundKeyDown = e => {\n      if (!this.props.onoff || this.keyValidator.indexOf(e.key.toUpperCase()) === -1) return;\n      var aud = document.querySelector(\".clip[id=\".concat(e.key.toUpperCase(), \"]\"));\n      aud.currentTime = 0;\n      aud.volume = this.props.volume / 100;\n      aud.play();\n      this.setState({\n        keyPressed: e.key.toUpperCase()\n      });\n    };\n\n    this.changePlayList = event => {\n      const playL = event.currentTarget.innerHTML;\n      this.setState(() => ({\n        playList: playL\n      }));\n    };\n\n    this.muteVolume = () => {\n      this.setState(state => state.muted === false ? {\n        volume: 0,\n        muted: true,\n        lastVolume: state.volume\n      } : {\n        volume: state.lastVolume,\n        muted: false\n      });\n    };\n\n    this.state = {\n      playList: 'CLASSIC',\n      keyPressed: '',\n      muted: false,\n      lastVolume: 0\n    };\n    this.aud = [];\n    this.keyValidator = ['Q', 'W', 'E', 'A', 'S', 'D', 'Z', 'X', 'C'];\n    this.firstPlayList = playlistOne;\n    this.secondPlayList = playlistTwo;\n  }\n\n  componentWillMount() {\n    document.addEventListener(\"keydown\", this.makeSoundKeyDown.bind(this));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"drumMachine\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"divHeaderControls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"divHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(PowerOnOff, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, this.state.onOff), React.createElement(LogoHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"Controls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"divPlaySelectors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(PlaylistSelector, {\n      playList: \"CLASSIC\",\n      changePlaylist: this.changePlayList,\n      playListActive: this.state.playList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(PlaylistSelector, {\n      playList: \"ELECTRO\",\n      changePlaylist: this.changePlayList,\n      playListActive: this.state.playList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(Display, {\n      playlist: this.state.playList,\n      keyPressed: this.state.keyPressed,\n      firstPlayList: this.firstPlayList,\n      secondPlayList: this.secondPlayList,\n      parVolume: this.state.volume,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(VolumeSlider, {\n      propMuted: this.state.muted,\n      vol: this.state.volume,\n      muteVolume: this.muteVolume,\n      parVolume: this.state.volume,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"Grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.state.playList === 'CLASSIC' ? playlistOne.map((val, index) => React.createElement(Pad, {\n      code: val.code,\n      parLetter: val.key,\n      parVolume: this.state.volume,\n      parSound: val.url,\n      sendKey: this.makeSoundClick.bind(this, index),\n      key: index,\n      keyActive: this.state.keyPressed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })) : playlistTwo.map((val, index) => React.createElement(Pad, {\n      code: val.code,\n      parLetter: val.key,\n      parVolume: this.state.volume,\n      parSound: val.url,\n      sendKey: this.makeSoundClick.bind(this, index),\n      key: index,\n      keyActive: this.state.keyPressed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    onoff: state.onoff,\n    vol: state.volume\n  };\n};\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["C:\\Users\\Francisco Javier\\Documents\\Proyectos\\drumMachine\\drumMachine\\src\\App.js"],"names":["React","Pad","VolumeSlider","PowerOnOff","Display","PlaylistSelector","LogoHeader","playlistOne","playlistTwo","connect","App","Component","constructor","props","makeSoundClick","index","e","onoff","aud","currentTarget","querySelector","currentTime","volume","play","setState","keyPressed","value","makeSoundKeyDown","keyValidator","indexOf","key","toUpperCase","document","changePlayList","event","playL","innerHTML","playList","muteVolume","state","muted","lastVolume","firstPlayList","secondPlayList","componentWillMount","addEventListener","bind","render","onOff","map","val","code","url","mapStateToProps","vol"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Pad from './components/pad/Pad';\r\nimport VolumeSlider from './components/volumeSlider/VolumeSlider';\r\nimport PowerOnOff from './components/powerOnOff/PowerOnOff';\r\nimport Display from './components/display/Display';\r\nimport PlaylistSelector from './components/playlistSelector/PlaylistSelector';\r\nimport LogoHeader from './components/logoHeader/LogoHeader';\r\nimport './App.css';\r\nimport './components/volumeSlider/volumeSlider.css';\r\nimport './components/display/display.css';\r\nimport './components/pad/pad.css';\r\nimport './components/powerOnOff/powerOnOff.css';\r\nimport './components/playlistSelector/playlistSelector.css';\r\nimport './components/logoHeader/logoHeader.css';\r\nimport { playlistOne, playlistTwo } from './audios';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      playList: 'CLASSIC',\r\n      keyPressed: '',\r\n      muted: false,\r\n      lastVolume: 0\r\n    };\r\n    this.aud = [];\r\n    this.keyValidator = ['Q', 'W', 'E', 'A', 'S', 'D', 'Z', 'X', 'C'];\r\n    this.firstPlayList = playlistOne;\r\n    this.secondPlayList = playlistTwo;\r\n  }\r\n\r\n  componentWillMount() {\r\n    document.addEventListener(\"keydown\", this.makeSoundKeyDown.bind(this));\r\n  }\r\n\r\n  makeSoundClick = (index, e) => {\r\n    if (!this.props.onoff) return;\r\n    var aud = e.currentTarget.querySelector('audio');\r\n    aud.currentTime = 0;\r\n    aud.volume = this.props.volume / 100;\r\n    aud.play();\r\n    this.setState({ keyPressed: e.currentTarget.value });\r\n  }\r\n\r\n  makeSoundKeyDown = (e) => {\r\n    if (!this.props.onoff || this.keyValidator.indexOf(e.key.toUpperCase()) === -1) return;\r\n    var aud = document.querySelector(`.clip[id=${e.key.toUpperCase()}]`);\r\n    aud.currentTime = 0;\r\n    aud.volume = this.props.volume / 100;\r\n    aud.play();\r\n    this.setState({ keyPressed: e.key.toUpperCase() });\r\n  }\r\n\r\n\r\n  changePlayList = (event) => {\r\n    const playL = event.currentTarget.innerHTML;\r\n    this.setState(() => ({\r\n      playList: playL\r\n    }));\r\n  }\r\n\r\n  muteVolume = () => {\r\n    this.setState((state) =>\r\n      state.muted === false ? { volume: 0, muted: true, lastVolume: state.volume } : { volume: state.lastVolume, muted: false }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"drumMachine\">\r\n          <div className='divHeaderControls'>\r\n            <div className='divHeader'>\r\n              <PowerOnOff>{this.state.onOff}</PowerOnOff>\r\n              <LogoHeader></LogoHeader>\r\n            </div>\r\n            <div className=\"Controls\">\r\n              <div className='divPlaySelectors'>\r\n                <PlaylistSelector playList='CLASSIC' changePlaylist={this.changePlayList} playListActive={this.state.playList}></PlaylistSelector>\r\n                <PlaylistSelector playList='ELECTRO' changePlaylist={this.changePlayList} playListActive={this.state.playList}></PlaylistSelector>\r\n              </div>\r\n              <Display playlist={this.state.playList} keyPressed={this.state.keyPressed} firstPlayList={this.firstPlayList} secondPlayList={this.secondPlayList} parVolume={this.state.volume}></Display>\r\n              <VolumeSlider propMuted={this.state.muted} vol={this.state.volume} muteVolume={this.muteVolume} parVolume={this.state.volume}></VolumeSlider>\r\n            </div>\r\n          </div>\r\n          <div className=\"Grid\">\r\n            {\r\n              this.state.playList === 'CLASSIC' ?\r\n                playlistOne.map((val, index) =>\r\n                  <Pad code={val.code} parLetter={val.key} parVolume={this.state.volume} parSound={val.url} sendKey={this.makeSoundClick.bind(this, index)} key={index} keyActive={this.state.keyPressed}></Pad>\r\n                ) :\r\n                playlistTwo.map((val, index) =>\r\n                  <Pad code={val.code} parLetter={val.key} parVolume={this.state.volume} parSound={val.url} sendKey={this.makeSoundClick.bind(this, index)} key={index} keyActive={this.state.keyPressed}></Pad>\r\n                )\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { onoff: state.onoff, vol: state.volume }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(App);"]},"metadata":{},"sourceType":"module"}