{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Francisco Javier\\\\Documents\\\\Proyectos\\\\drumMachine\\\\drumMachine\\\\src\\\\childComponents\\\\drumVisualizer.js\";\nimport React from 'react';\n\nconst DrumVisualizer = props => {\n  return React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, props.playList === 'BANK 1' && props.keyPressed !== '' ? props.firstPlayList.filter(x => x.key === props.keyPressed)[0].id : props.keyPressed !== '' ? props.secondPlayList.filter(x => x.key === props.keyPressed)[0].id : this.innerHTML);\n};\n\nfunction areEqual(prevProps, nextProps) {\n  return nextProps.key === '' ? false : true;\n}\n\nexport default React.memo(DrumVisualizer, areEqual);","map":{"version":3,"sources":["C:\\Users\\Francisco Javier\\Documents\\Proyectos\\drumMachine\\drumMachine\\src\\childComponents\\drumVisualizer.js"],"names":["React","DrumVisualizer","props","playList","keyPressed","firstPlayList","filter","x","key","id","secondPlayList","innerHTML","areEqual","prevProps","nextProps","memo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAC9B,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACC,QAAN,KAAmB,QAAnB,IAA+BD,KAAK,CAACE,UAAN,KAAmB,EAAlD,GACDF,KAAK,CAACG,aAAN,CAAoBC,MAApB,CAA2BC,CAAC,IAAIA,CAAC,CAACC,GAAF,KAAUN,KAAK,CAACE,UAAhD,EAA4D,CAA5D,EAA+DK,EAD9D,GAEDP,KAAK,CAACE,UAAN,KAAmB,EAAnB,GAAuBF,KAAK,CAACQ,cAAN,CAAqBJ,MAArB,CAA4BC,CAAC,IAAIA,CAAC,CAACC,GAAF,KAAUN,KAAK,CAACE,UAAjD,EAA6D,CAA7D,EAAgEK,EAAvF,GAA2F,KAAKE,SAHpG,CADJ;AAQH,CATD;;AAWA,SAASC,QAAT,CAAmBC,SAAnB,EAA8BC,SAA9B,EAA0C;AACtC,SAAOA,SAAS,CAACN,GAAV,KAAkB,EAAlB,GAAsB,KAAtB,GAA6B,IAApC;AACH;;AAED,eAAeR,KAAK,CAACe,IAAN,CAAWd,cAAX,EAA2BW,QAA3B,CAAf","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst DrumVisualizer = (props) => {\r\n    return(\r\n        <button>\r\n            {props.playList === 'BANK 1' && props.keyPressed!=='' ? \r\n            props.firstPlayList.filter(x => x.key === props.keyPressed)[0].id : \r\n            props.keyPressed!==''? props.secondPlayList.filter(x => x.key === props.keyPressed)[0].id: this.innerHTML}\r\n        </button>\r\n    )\r\n    \r\n}\r\n\r\nfunction areEqual (prevProps, nextProps)  {\r\n    return nextProps.key === ''? false: true;\r\n}\r\n\r\nexport default React.memo(DrumVisualizer, areEqual);"]},"metadata":{},"sourceType":"module"}