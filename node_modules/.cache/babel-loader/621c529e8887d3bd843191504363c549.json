{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Francisco Javier\\\\Documents\\\\Proyectos\\\\drumMachine\\\\drumMachine\\\\src\\\\components\\\\volumeSlider\\\\VolumeSlider.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport store from '../../redux/store';\nimport changeVolume from '../../redux/actions/changeVolume';\n\nclass VolumeSlider extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.muteVolume = () => {\n      console.log(store.getState());\n      this.props.changeVolume(0);\n      console.log(store.getState());\n    };\n\n    this.changVol = this.changVol.bind(this);\n    this.muteVolume = this.muteVolume.bind(this);\n  }\n\n  changVol(event) {\n    this.props.changeVolume(event.target.value);\n    console.log(store.getState());\n  }\n\n  render() {\n    const _this$props = this.props,\n          onOffStore = _this$props.onOffStore,\n          volStore = _this$props.volStore;\n    return React.createElement(\"div\", {\n      className: \"divVolumeSlider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inputSliderWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: onoff ? 'sliderOn' : 'sliderOff',\n      type: \"range\",\n      min: \"0\",\n      max: \"100\",\n      value: volStore,\n      onChange: this.changVol,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"iconWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      onClick: this.muteVolume,\n      className: volStore == 0 && onOffStore ? 'iconVolumeOn fas fa-volume-mute' : volStore != 0 && onOffStore ? 'iconVolumeOff fas fa-volume-up' : volStore != 0 && onOffStore ? 'iconVolumeOn fas fa-volume-up' : 'iconVolumeOff fas fa-volume-mute',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    onOffStore: state.onoff,\n    volStore: state.volume\n  };\n};\n\nconst mapDispatchToProps = {\n  changeVolume\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(VolumeSlider);","map":{"version":3,"sources":["C:\\Users\\Francisco Javier\\Documents\\Proyectos\\drumMachine\\drumMachine\\src\\components\\volumeSlider\\VolumeSlider.js"],"names":["React","connect","store","changeVolume","VolumeSlider","Component","constructor","props","muteVolume","console","log","getState","changVol","bind","event","target","value","render","onOffStore","volStore","onoff","mapStateToProps","state","volume","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;;AAEA,MAAMC,YAAN,SAA2BJ,KAAK,CAACK,SAAjC,CAA2C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,UAXmB,GAWN,MAAM;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACS,QAAN,EAAZ;AAEA,WAAKJ,KAAL,CAAWJ,YAAX,CAAwB,CAAxB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACS,QAAN,EAAZ;AAED,KAjBkB;;AAEjB,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKL,UAAL,GAAkB,KAAKA,UAAL,CAAgBK,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AAEDD,EAAAA,QAAQ,CAACE,KAAD,EAAQ;AACd,SAAKP,KAAL,CAAWJ,YAAX,CAAwBW,KAAK,CAACC,MAAN,CAAaC,KAArC;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACS,QAAN,EAAZ;AACD;;AAUDM,EAAAA,MAAM,GAAG;AAAA,wBAC0B,KAAKV,KAD/B;AAAA,UACCW,UADD,eACCA,UADD;AAAA,UACaC,QADb,eACaA,QADb;AAGP,WACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,SAAS,EAAEC,KAAK,GAAG,UAAH,GAAgB,WAAvC;AAAoD,MAAA,IAAI,EAAC,OAAzD;AAAiE,MAAA,GAAG,EAAC,GAArE;AAAyE,MAAA,GAAG,EAAC,KAA7E;AAAmF,MAAA,KAAK,EAAED,QAA1F;AAAoG,MAAA,QAAQ,EAAE,KAAKP,QAAnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,OAAO,EAAE,KAAKJ,UAAjB;AAA6B,MAAA,SAAS,EAAEW,QAAQ,IAAI,CAAZ,IAAiBD,UAAjB,GAA8B,iCAA9B,GAAkEC,QAAQ,IAAI,CAAZ,IAAiBD,UAAjB,GACxG,gCADwG,GACrEC,QAAQ,IAAI,CAAZ,IAAiBD,UAAjB,GAA8B,+BAA9B,GAAgE,kCADrG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,CADF;AAUD;;AAjCwC;;AAoC3C,MAAMG,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLJ,IAAAA,UAAU,EAAEI,KAAK,CAACF,KADb;AAELD,IAAAA,QAAQ,EAAEG,KAAK,CAACC;AAFX,GAAP;AAID,CALD;;AAOA,MAAMC,kBAAkB,GAAG;AACzBrB,EAAAA;AADyB,CAA3B;AAIA,eAAeF,OAAO,CAACoB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CpB,YAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport store from '../../redux/store'\r\nimport changeVolume from '../../redux/actions/changeVolume'\r\n\r\nclass VolumeSlider extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.changVol = this.changVol.bind(this);\r\n    this.muteVolume = this.muteVolume.bind(this);\r\n  }\r\n\r\n  changVol(event) {\r\n    this.props.changeVolume(event.target.value);\r\n    console.log(store.getState());\r\n  }\r\n\r\n  muteVolume = () => {\r\n    console.log(store.getState());\r\n\r\n    this.props.changeVolume(0);\r\n    console.log(store.getState());\r\n\r\n  }\r\n\r\n  render() {\r\n    const { onOffStore, volStore } = this.props;\r\n\r\n    return (\r\n      <div className=\"divVolumeSlider\" >\r\n        <div className='inputSliderWrapper'>\r\n          <input className={onoff ? 'sliderOn' : 'sliderOff'} type=\"range\" min='0' max='100' value={volStore} onChange={this.changVol}></input>\r\n        </div>\r\n        <div className='iconWrapper'>\r\n          <i onClick={this.muteVolume} className={volStore == 0 && onOffStore ? 'iconVolumeOn fas fa-volume-mute' : volStore != 0 && onOffStore ?\r\n            'iconVolumeOff fas fa-volume-up' : volStore != 0 && onOffStore ? 'iconVolumeOn fas fa-volume-up' : 'iconVolumeOff fas fa-volume-mute'} />\r\n        </div>\r\n      </div>)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    onOffStore: state.onoff,\r\n    volStore: state.volume\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  changeVolume\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VolumeSlider);"]},"metadata":{},"sourceType":"module"}