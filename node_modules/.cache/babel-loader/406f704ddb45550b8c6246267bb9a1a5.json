{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Francisco Javier\\\\Documents\\\\Proyectos\\\\drumMachine\\\\drumMachine\\\\src\\\\App.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Pad from './components/Pad';\nimport VolumeSlider from './components/VolumeSlider';\nimport Display from './components/Display';\nimport PlaylistSelector from './components/PlaylistSelector';\nimport LogoHeader from './components/LogoHeader';\nimport PowerOnOff from './components/PowerOnOff';\nimport './App.css';\nimport './components/volumeSlider.css';\nimport './components/display.css';\nimport './components/pad.css';\nimport './components/powerOnOff.css';\nimport './components/playlistSelector.css';\nimport './components/logoHeader.css';\nimport { playlistOne, playlistTwo } from './audios';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playList: 'CLASSIC',\n      keyPressed: ''\n    };\n    this.aud = [];\n    this.keyValidator = ['Q', 'W', 'E', 'A', 'S', 'D', 'Z', 'X', 'C'];\n    document.addEventListener('keydown', this.makeSoundKeyDown.bind(this));\n  }\n\n  makeSoundClick(index, e) {\n    const _this$props = this.props,\n          onoff = _this$props.onoff,\n          volumeStore = _this$props.volumeStore;\n    if (!onoff) return;\n    const aud = e.currentTarget.querySelector('audio');\n    aud.currentTime = 0;\n    aud.volume = volumeStore / 100;\n    aud.play();\n    this.setState({\n      keyPressed: e.currentTarget.value\n    });\n  }\n\n  makeSoundKeyDown(e) {\n    const _this$props2 = this.props,\n          onoff = _this$props2.onoff,\n          volumeStore = _this$props2.volumeStore;\n    if (!onoff || this.keyValidator.indexOf(e.key.toUpperCase()) === -1) return;\n    const aud = document.querySelector(\".clip[id=\".concat(e.key.toUpperCase(), \"]\"));\n    aud.currentTime = 0;\n    aud.volume = volumeStore / 100;\n    aud.play();\n    this.setState({\n      keyPressed: e.key.toUpperCase()\n    });\n  }\n\n  render() {\n    const playListProp = this.props.playListProp;\n    const _this$state = this.state,\n          playList = _this$state.playList,\n          keyPressed = _this$state.keyPressed,\n          volume = _this$state.volume;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"drumMachine\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"divHeaderControls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"divHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(PowerOnOff, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(LogoHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"Controls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"divPlaySelectors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(PlaylistSelector, {\n      playList: \"CLASSIC\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(PlaylistSelector, {\n      playList: \"ELECTRO\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(Display, {\n      playlist: playList,\n      keyPressed: keyPressed,\n      parVolume: volume,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(VolumeSlider, {\n      vol: volume,\n      parVolume: volume,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"Grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, playListProp === 'CLASSIC' ? playlistOne.map((val, index) => React.createElement(Pad, {\n      code: val.code,\n      parLetter: val.key,\n      parVolume: volume,\n      parSound: val.url,\n      sendKey: this.makeSoundClick.bind(this, index),\n      key: val.key,\n      keyActive: keyPressed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })) : playlistTwo.map((val, index) => React.createElement(Pad, {\n      code: val.code,\n      parLetter: val.key,\n      parVolume: volume,\n      parSound: val.url,\n      sendKey: this.makeSoundClick.bind(this, index),\n      key: val.key,\n      keyActive: keyPressed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  onoff: state.onoff,\n  volumeStore: state.volume,\n  playListProp: state.playList\n});\n\nApp.propTypes = {\n  onoff: PropTypes.bool.isRequired,\n  volumeStore: PropTypes.string.isRequired,\n  playListProp: PropTypes.string.isRequired\n};\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["C:/Users/Francisco Javier/Documents/Proyectos/drumMachine/drumMachine/src/App.jsx"],"names":["React","PropTypes","connect","Pad","VolumeSlider","Display","PlaylistSelector","LogoHeader","PowerOnOff","playlistOne","playlistTwo","App","Component","constructor","props","state","playList","keyPressed","aud","keyValidator","document","addEventListener","makeSoundKeyDown","bind","makeSoundClick","index","e","onoff","volumeStore","currentTarget","querySelector","currentTime","volume","play","setState","value","indexOf","key","toUpperCase","render","playListProp","map","val","code","url","mapStateToProps","propTypes","bool","isRequired","string"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Pad from './components/Pad';\r\nimport VolumeSlider from './components/VolumeSlider';\r\nimport Display from './components/Display';\r\nimport PlaylistSelector from './components/PlaylistSelector';\r\nimport LogoHeader from './components/LogoHeader';\r\nimport PowerOnOff from './components/PowerOnOff';\r\nimport './App.css';\r\nimport './components/volumeSlider.css';\r\nimport './components/display.css';\r\nimport './components/pad.css';\r\nimport './components/powerOnOff.css';\r\nimport './components/playlistSelector.css';\r\nimport './components/logoHeader.css';\r\nimport { playlistOne, playlistTwo } from './audios';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      playList: 'CLASSIC',\r\n      keyPressed: '',\r\n    };\r\n    this.aud = [];\r\n    this.keyValidator = ['Q', 'W', 'E', 'A', 'S', 'D', 'Z', 'X', 'C'];\r\n    document.addEventListener('keydown', this.makeSoundKeyDown.bind(this));\r\n  }\r\n\r\n  makeSoundClick(index, e) {\r\n    const { onoff, volumeStore } = this.props;\r\n    if (!onoff) return;\r\n    const aud = e.currentTarget.querySelector('audio');\r\n    aud.currentTime = 0;\r\n    aud.volume = volumeStore / 100;\r\n    aud.play();\r\n    this.setState({ keyPressed: e.currentTarget.value });\r\n  }\r\n\r\n  makeSoundKeyDown(e) {\r\n    const { onoff, volumeStore } = this.props;\r\n    if (!onoff || this.keyValidator.indexOf(e.key.toUpperCase()) === -1) return;\r\n    const aud = document.querySelector(`.clip[id=${e.key.toUpperCase()}]`);\r\n    aud.currentTime = 0;\r\n    aud.volume = volumeStore / 100;\r\n    aud.play();\r\n    this.setState({ keyPressed: e.key.toUpperCase() });\r\n  }\r\n\r\n  render() {\r\n    const { playListProp } = this.props;\r\n    const { playList, keyPressed, volume } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"drumMachine\">\r\n          <div className=\"divHeaderControls\">\r\n            <div className=\"divHeader\">\r\n              <PowerOnOff />\r\n              <LogoHeader />\r\n            </div>\r\n            <div className=\"Controls\">\r\n              <div className=\"divPlaySelectors\">\r\n                <PlaylistSelector\r\n                  playList=\"CLASSIC\"\r\n                />\r\n                <PlaylistSelector\r\n                  playList=\"ELECTRO\"\r\n                />\r\n              </div>\r\n              <Display\r\n                playlist={playList}\r\n                keyPressed={keyPressed}\r\n                parVolume={volume}\r\n              />\r\n              <VolumeSlider\r\n                vol={volume}\r\n                parVolume={volume}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"Grid\">\r\n            {\r\n              playListProp === 'CLASSIC'\r\n                ? playlistOne.map((val, index) => (\r\n                  <Pad\r\n                    code={val.code}\r\n                    parLetter={val.key}\r\n                    parVolume={volume}\r\n                    parSound={val.url}\r\n                    sendKey={this.makeSoundClick.bind(this, index)}\r\n                    key={val.key}\r\n                    keyActive={keyPressed}\r\n                  />\r\n                ))\r\n                : playlistTwo.map((val, index) => (\r\n                  <Pad\r\n                    code={val.code}\r\n                    parLetter={val.key}\r\n                    parVolume={volume}\r\n                    parSound={val.url}\r\n                    sendKey={this.makeSoundClick.bind(this, index)}\r\n                    key={val.key}\r\n                    keyActive={keyPressed}\r\n                  />\r\n                ))\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  onoff: state.onoff,\r\n  volumeStore: state.volume,\r\n  playListProp: state.playList,\r\n});\r\n\r\nApp.propTypes = {\r\n  onoff: PropTypes.bool.isRequired,\r\n  volumeStore: PropTypes.string.isRequired,\r\n  playListProp: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n"]},"metadata":{},"sourceType":"module"}