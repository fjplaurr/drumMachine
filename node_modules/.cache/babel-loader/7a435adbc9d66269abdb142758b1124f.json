{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Francisco Javier\\\\Documents\\\\Proyectos\\\\drumMachine\\\\drumMachine\\\\src\\\\components\\\\VolumeSlider.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport changeVolume from '../redux/actions/changeVolume';\nimport changePlayList from '../redux/actions/changePlayList';\n\nclass VolumeSlider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.changVol = this.changVol.bind(this);\n    this.muteVolume = this.muteVolume.bind(this);\n  }\n\n  muteVolume() {\n    this.props.changeVolume(0);\n  }\n\n  changVol(event) {\n    this.props.changeVolume(event.target.value);\n  }\n\n  render() {\n    const _this$props = this.props,\n          onOffStore = _this$props.onOffStore,\n          volStore = _this$props.volStore;\n    let classN;\n\n    if (volStore === 0 && onOffStore) {\n      classN = 'iconVolumeOn fas fa-volume-mute';\n    } else if (volStore !== 0 && onOffStore) {\n      classN = 'iconVolumeOff fas fa-volume-up';\n    } else {\n      classN = 'iconVolumeOff fas fa-volume-mute';\n    }\n\n    return React.createElement(\"div\", {\n      className: \"divVolumeSlider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inputSliderWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: onOffStore ? 'sliderOn' : 'sliderOff',\n      type: \"range\",\n      min: \"0\",\n      max: \"100\",\n      value: volStore,\n      onChange: this.changVol,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"iconWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      tabIndex: \"0\",\n      type: \"button\",\n      onClick: this.muteVolume,\n      onKeyDown: this.muteVolume,\n      className: classN,\n      \"aria-label\": \"Mute volume\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    onOffStore: state.onoff,\n    volStore: state.volume\n  };\n};\n\nconst mapDispatchToProps = {\n  changeVolume,\n  changePlayList\n};\nVolumeSlider.propTypes = {\n  onOffStore: PropTypes.bool.isRequired,\n  volStore: PropTypes.string.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(VolumeSlider);","map":{"version":3,"sources":["C:/Users/Francisco Javier/Documents/Proyectos/drumMachine/drumMachine/src/components/VolumeSlider.jsx"],"names":["React","PropTypes","connect","changeVolume","changePlayList","VolumeSlider","Component","constructor","props","changVol","bind","muteVolume","event","target","value","render","onOffStore","volStore","classN","mapStateToProps","state","onoff","volume","mapDispatchToProps","propTypes","bool","isRequired","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;AAEA,MAAMC,YAAN,SAA2BL,KAAK,CAACM,SAAjC,CAA2C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AAEDC,EAAAA,UAAU,GAAG;AACX,SAAKH,KAAL,CAAWL,YAAX,CAAwB,CAAxB;AACD;;AAEDM,EAAAA,QAAQ,CAACG,KAAD,EAAQ;AACd,SAAKJ,KAAL,CAAWL,YAAX,CAAwBS,KAAK,CAACC,MAAN,CAAaC,KAArC;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,wBAC0B,KAAKP,KAD/B;AAAA,UACCQ,UADD,eACCA,UADD;AAAA,UACaC,QADb,eACaA,QADb;AAEP,QAAIC,MAAJ;;AACA,QAAID,QAAQ,KAAK,CAAb,IAAkBD,UAAtB,EAAkC;AAChCE,MAAAA,MAAM,GAAG,iCAAT;AACD,KAFD,MAEO,IAAID,QAAQ,KAAK,CAAb,IAAkBD,UAAtB,EAAkC;AACvCE,MAAAA,MAAM,GAAG,gCAAT;AACD,KAFM,MAEA;AACLA,MAAAA,MAAM,GAAG,kCAAT;AACD;;AACD,WACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAEF,UAAU,GAAG,UAAH,GAAgB,WADvC;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,GAAG,EAAC,GAHN;AAIE,MAAA,GAAG,EAAC,KAJN;AAKE,MAAA,KAAK,EAAEC,QALT;AAME,MAAA,QAAQ,EAAE,KAAKR,QANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAWE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,QAAQ,EAAC,GADX;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,OAAO,EAAE,KAAKE,UAHhB;AAIE,MAAA,SAAS,EAAE,KAAKA,UAJlB;AAKE,MAAA,SAAS,EAAEO,MALb;AAME,oBAAW,aANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAXF,CADF;AAwBD;;AAjDwC;;AAoD3C,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLJ,IAAAA,UAAU,EAAEI,KAAK,CAACC,KADb;AAELJ,IAAAA,QAAQ,EAAEG,KAAK,CAACE;AAFX,GAAP;AAID,CALD;;AAOA,MAAMC,kBAAkB,GAAG;AACzBpB,EAAAA,YADyB;AAEzBC,EAAAA;AAFyB,CAA3B;AAKAC,YAAY,CAACmB,SAAb,GAAyB;AACvBR,EAAAA,UAAU,EAAEf,SAAS,CAACwB,IAAV,CAAeC,UADJ;AAEvBT,EAAAA,QAAQ,EAAEhB,SAAS,CAAC0B,MAAV,CAAiBD;AAFJ,CAAzB;AAKA,eAAexB,OAAO,CAACiB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6ClB,YAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport changeVolume from '../redux/actions/changeVolume';\r\nimport changePlayList from '../redux/actions/changePlayList';\r\n\r\nclass VolumeSlider extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.changVol = this.changVol.bind(this);\r\n    this.muteVolume = this.muteVolume.bind(this);\r\n  }\r\n\r\n  muteVolume() {\r\n    this.props.changeVolume(0);\r\n  }\r\n\r\n  changVol(event) {\r\n    this.props.changeVolume(event.target.value);\r\n  }\r\n\r\n  render() {\r\n    const { onOffStore, volStore } = this.props;\r\n    let classN;\r\n    if (volStore === 0 && onOffStore) {\r\n      classN = 'iconVolumeOn fas fa-volume-mute';\r\n    } else if (volStore !== 0 && onOffStore) {\r\n      classN = 'iconVolumeOff fas fa-volume-up';\r\n    } else {\r\n      classN = 'iconVolumeOff fas fa-volume-mute';\r\n    }\r\n    return (\r\n      <div className=\"divVolumeSlider\">\r\n        <div className=\"inputSliderWrapper\">\r\n          <input\r\n            className={onOffStore ? 'sliderOn' : 'sliderOff'}\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            value={volStore}\r\n            onChange={this.changVol}\r\n          />\r\n        </div>\r\n        <div className=\"iconWrapper\">\r\n          <a\r\n            tabIndex=\"0\"\r\n            type=\"button\"\r\n            onClick={this.muteVolume}\r\n            onKeyDown={this.muteVolume}\r\n            className={classN}\r\n            aria-label=\"Mute volume\"\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    onOffStore: state.onoff,\r\n    volStore: state.volume\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  changeVolume,\r\n  changePlayList\r\n}\r\n\r\nVolumeSlider.propTypes = {\r\n  onOffStore: PropTypes.bool.isRequired,\r\n  volStore: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VolumeSlider);\r\n"]},"metadata":{},"sourceType":"module"}