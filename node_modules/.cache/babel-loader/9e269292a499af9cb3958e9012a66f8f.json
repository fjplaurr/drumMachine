{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Francisco Javier\\\\Documents\\\\Proyectos\\\\drumMachine\\\\drumMachine\\\\src\\\\components\\\\Display.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { playlistOne, playlistTwo } from '../audios';\n\nconst Display = props => {\n  const volStore = props.volStore,\n        playlist = props.playlist,\n        keyPressed = props.keyPressed,\n        onOffStore = props.onOffStore;\n  let rend;\n\n  if (playlist === 'CLASSIC' && keyPressed !== '') {\n    rend = playlistOne.filter(x => x.key === keyPressed)[0].name.toUpperCase();\n  } else if (playlist === 'ELECTRO' && keyPressed !== '') {\n    rend = playlistTwo.filter(x => x.key === keyPressed)[0].name.toUpperCase();\n  } else {\n    rend = '';\n  }\n\n  return React.createElement(\"div\", {\n    className: \"display\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, rend), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, onOffStore ? \"VOL:\".concat(volStore) : ''));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    onOffStore: state.onoff,\n    volStore: state.volume\n  };\n}\n\nDisplay.propTypes = {\n  volStore: PropTypes.number.isRequired,\n  playlist: PropTypes.string.isRequired,\n  keyPressed: PropTypes.string.isRequired,\n  onOffStore: PropTypes.bool.isRequired\n};\nexport default connect(mapStateToProps)(Display);","map":{"version":3,"sources":["C:/Users/Francisco Javier/Documents/Proyectos/drumMachine/drumMachine/src/components/Display.jsx"],"names":["React","connect","PropTypes","playlistOne","playlistTwo","Display","props","volStore","playlist","keyPressed","onOffStore","rend","filter","x","key","name","toUpperCase","mapStateToProps","state","onoff","volume","propTypes","number","isRequired","string","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,WAAzC;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA,QAEvBC,QAFuB,GAGrBD,KAHqB,CAEvBC,QAFuB;AAAA,QAEbC,QAFa,GAGrBF,KAHqB,CAEbE,QAFa;AAAA,QAEHC,UAFG,GAGrBH,KAHqB,CAEHG,UAFG;AAAA,QAESC,UAFT,GAGrBJ,KAHqB,CAESI,UAFT;AAIzB,MAAIC,IAAJ;;AACA,MAAIH,QAAQ,KAAK,SAAb,IAA0BC,UAAU,KAAK,EAA7C,EAAiD;AAC/CE,IAAAA,IAAI,GAAGR,WAAW,CAACS,MAAZ,CAAoBC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUL,UAApC,EAAgD,CAAhD,EAAmDM,IAAnD,CAAwDC,WAAxD,EAAP;AACD,GAFD,MAEO,IAAIR,QAAQ,KAAK,SAAb,IAA0BC,UAAU,KAAK,EAA7C,EAAiD;AACtDE,IAAAA,IAAI,GAAGP,WAAW,CAACQ,MAAZ,CAAoBC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUL,UAApC,EAAgD,CAAhD,EAAmDM,IAAnD,CAAwDC,WAAxD,EAAP;AACD,GAFM,MAEA;AACLL,IAAAA,IAAI,GAAG,EAAP;AACD;;AACD,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IADH,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMD,UAAU,iBAAUH,QAAV,IAAuB,EAAvC,CAJF,CADF;AAQD,CApBD;;AAsBA,SAASU,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLR,IAAAA,UAAU,EAAEQ,KAAK,CAACC,KADb;AAELZ,IAAAA,QAAQ,EAAEW,KAAK,CAACE;AAFX,GAAP;AAID;;AAEDf,OAAO,CAACgB,SAAR,GAAoB;AAClBd,EAAAA,QAAQ,EAAEL,SAAS,CAACoB,MAAV,CAAiBC,UADT;AAElBf,EAAAA,QAAQ,EAAEN,SAAS,CAACsB,MAAV,CAAiBD,UAFT;AAGlBd,EAAAA,UAAU,EAAEP,SAAS,CAACsB,MAAV,CAAiBD,UAHX;AAIlBb,EAAAA,UAAU,EAAER,SAAS,CAACuB,IAAV,CAAeF;AAJT,CAApB;AAOA,eAAetB,OAAO,CAACgB,eAAD,CAAP,CAAyBZ,OAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { playlistOne, playlistTwo } from '../audios';\r\n\r\nconst Display = (props) => {\r\n  const {\r\n    volStore, playlist, keyPressed, onOffStore,\r\n  } = props;\r\n  let rend;\r\n  if (playlist === 'CLASSIC' && keyPressed !== '') {\r\n    rend = playlistOne.filter((x) => x.key === keyPressed)[0].name.toUpperCase();\r\n  } else if (playlist === 'ELECTRO' && keyPressed !== '') {\r\n    rend = playlistTwo.filter((x) => x.key === keyPressed)[0].name.toUpperCase();\r\n  } else {\r\n    rend = '';\r\n  }\r\n  return (\r\n    <div className=\"display\">\r\n      <div>\r\n        {rend}\r\n      </div>\r\n      <div>{onOffStore ? `VOL:${volStore}` : ''}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    onOffStore: state.onoff,\r\n    volStore: state.volume,\r\n  };\r\n}\r\n\r\nDisplay.propTypes = {\r\n  volStore: PropTypes.number.isRequired,\r\n  playlist: PropTypes.string.isRequired,\r\n  keyPressed: PropTypes.string.isRequired,\r\n  onOffStore: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps)(Display);\r\n"]},"metadata":{},"sourceType":"module"}